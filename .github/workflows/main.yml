name: Tic-Tac-Toe CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt and build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev qt5-qmake qtchooser qttools5-dev-tools build-essential cmake
        
    - name: Verify installations
      run: |
        which qmake || echo "qmake not found"
        qmake --version || echo "qmake version check failed"
        which make || echo "make not found"
        make --version || echo "make version check failed"

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build application
      working-directory: ./app
      run: |
        # Debug: Show directory contents
        ls -la
        
        # Explicit paths for tools
        /usr/bin/qmake || { echo "qmake failed"; exit 1; }
        /usr/bin/make || { echo "make failed"; exit 1; }
        
        # Verify build output
        if [ ! -f "tictactoe" ]; then
          echo "Error: Build failed - executable not found"
          ls -la
          exit 1
        fi

    - name: Show build artifacts
      run: |
        ls -la ./app

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and run tests
      run: |
        /usr/bin/qmake TicTacToe_With_Tests.pro CONFIG+=test || { echo "Test qmake failed"; exit 1; }
        /usr/bin/make || { echo "Test make failed"; exit 1; }
        
        cd tests
        if [ ! -f "tst_tictactoetests" ]; then
          echo "Error: Test executable not found"
          ls -la
          exit 1
        fi
        ./tst_tictactoetests

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build release
      working-directory: ./app
      run: |
        /usr/bin/qmake
        /usr/bin/make

    - name: Package application
      run: |
        mkdir -p release
        if [ ! -f "app/tictactoe" ]; then
          echo "Error: Application binary not found for packaging"
          ls -la app/
          exit 1
        fi
        cp app/tictactoe release/
        tar -czvf tictactoe-release-${{ github.sha }}.tar.gz -C release tictactoe

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: release-${{ github.sha }}
        name: Tic-Tac-Toe Release ${{ github.sha }}
        files: tictactoe-release-${{ github.sha }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
