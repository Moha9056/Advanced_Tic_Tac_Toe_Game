name: CI/CD Pipeline - Advanced Tic Tac Toe

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_DIR: "build"

jobs:
  build-and-test:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            qt-pkg: qt6-base-dev
            install-cmd: sudo apt-get install -y
          - os: windows-latest
            qt-pkg: qt6
            install-cmd: choco install

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CMake (Fixed Version)
        uses: actions/setup-cmake@v3  # Corrected from invalid @x3

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          ${{ matrix.install-cmd }} ${{ matrix.qt-pkg }} g++ cmake

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${{ matrix.install-cmd }} ${{ matrix.qt-pkg }} cmake -y

      - name: Configure project
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          cmake ..

      - name: Build project
        run: |
          cd ${{ env.BUILD_DIR }}
          cmake --build . --config Release

      - name: Run tests
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            ctest -C Release --output-on-failure
          else
            ctest --output-on-failure
          fi
